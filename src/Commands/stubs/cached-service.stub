<?php

namespace DummyNamespace;

use Illuminate\Support\Facades\Cache;
use BrightComponents\Services\Traits\CachedService;

class DummyClass
{
    use CachedService;

    /** @var string */
    protected $queryKey = '';

    /**
     * Construct a new DummyClass.
     *
     * @param  mixed  $service
     */
    public function __construct($service)
    {
        $this->service = $service;
    }

    /**
     * Cache the response of the call to the service.
     *
     * @param  array  $params
     *
     * @return mixed
     */
    public function cache($params)
    {
        //return Cache::rememberForever($this->getCacheKey($orders->first()->report_created), function () use ($params) {
            //return $this->service->run($params);
        //});
    }

    /**
     * Get the key for caching.
     *
     * @param  string  $date
     *
     * @return string
     */
    protected function getCacheKey(string $date)
    {
        return md5(sprintf(
            '%s-%s',
            $this->getQueryKey(),
            Carbon::createFromFormat('Y-m-d H:i:s', $date)->timestamp
        ));
    }

    /**
     * Get the key used for cache.
     *
     * @return string
     */
    protected function getQueryKey()
    {
        return $this->queryKey;
    }
}
